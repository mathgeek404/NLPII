#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.5in
\topmargin 0.5in
\rightmargin 0.5in
\bottommargin 0.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Homework 4
\end_layout

\begin_layout Author
Sahit Mandala
\end_layout

\begin_layout Section*
Problem 1
\end_layout

\begin_layout Standard
Consider the NLP as given with solution and unique Lagrange multipliers
 (by LICQ) 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x^{*},\lambda^{*}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 and consider the unconstrainted problem indicated by the quadratic penalty
 function 
\begin_inset Formula $P_{\sigma}(x):=f(x)+\frac{1}{2\sigma}\sum_{i=1}^{m}c_{i}^{2}(x)$
\end_inset

.
 Since we are searching for a local minimizer for this function, we know
 that such a solution 
\begin_inset Formula $x_{k}^{*}$
\end_inset

 must satisfy 
\begin_inset Formula $\nabla P_{\mu}(x_{k}^{*})=0$
\end_inset

.
 Some calculus shows that 
\begin_inset Formula $\nabla P_{\mu}(x)=\nabla f(x)+\frac{1}{2\sigma}\sum_{i=1}^{m}\nabla c_{i}^{2}(x)=\nabla f(x)+\frac{1}{2\sigma}\sum_{i=1}^{m}2c_{i}(x)\nabla c_{i}(x)=\nabla f(x)+\frac{1}{\sigma}\sum_{i=1}^{m}c_{i}(x)\nabla c_{i}(x)=\nabla f(x)+\frac{1}{\sigma}c(x)^{T}A(x)$
\end_inset

.
\end_layout

\begin_layout Standard
Consider 
\begin_inset Formula $h(x,\lambda,\sigma)=\begin{bmatrix}\nabla f(x)-A(x)^{T}\lambda\\
-c(x)-\sigma\lambda
\end{bmatrix}$
\end_inset


\end_layout

\begin_layout Standard
Notice that for 
\begin_inset Formula $x^{*},\lambda^{*},\sigma=0$
\end_inset

 that 
\begin_inset Formula $h(x^{*},\lambda^{*},0)=\begin{bmatrix}\nabla f(x^{*})-A(x^{*})^{T}\lambda\\
-c(x^{*})
\end{bmatrix}=0$
\end_inset

 by the KKT conditions on the original NLP.
 We also know that 
\begin_inset Formula $F(x,\lambda,\sigma)=\begin{bmatrix}\nabla f(x)-A(x)^{T}\lambda\\
-c(x)-\sigma\lambda
\end{bmatrix}$
\end_inset

 is continuously differentiable in some neighborhood of 
\begin_inset Formula $[x^{*};\lambda^{*};0]$
\end_inset

 since 
\begin_inset Formula $\nabla f(x),c(x),\lambda$
\end_inset

 are all continuously differentiable in some neighborhood of 
\begin_inset Formula $[x^{*};\lambda^{*};0]$
\end_inset

.
 We also see that 
\begin_inset Formula $\nabla_{x,\lambda}h(x,\lambda,\sigma)=\begin{bmatrix}\nabla_{xx}^{2}L(x^{*},\lambda^{*}) & -A(x)^{T}\\
-A(x) & -\sigma I
\end{bmatrix}$
\end_inset

, noting that 
\begin_inset Formula $\nabla_{xx}^{2}L(x^{*},\lambda^{*})=\nabla^{2}f(x^{*})-\nabla A(x^{*})^{T}\lambda$
\end_inset

.
 We know that 
\begin_inset Formula $\nabla_{x,\lambda}h(x,\lambda,0)=\begin{bmatrix}\nabla_{xx}^{2}L(x^{*},\lambda^{*}) & -A(x^{*})^{T}\\
-A(x^{*}) & 0
\end{bmatrix}$
\end_inset

 is nonsingular since assumption 18.2 holds at 
\begin_inset Formula $x^{*}$
\end_inset

 with Lagrange multipliers 
\begin_inset Formula $\lambda^{*}$
\end_inset

 (assumption 18.2 follows from LICQ and the second order conditions) from
 which it follows that it is nonsingular.
\end_layout

\begin_layout Standard
By the implicit function theorem, we see that we can choose some open set
 
\begin_inset Formula $N_{x}$
\end_inset

 around 
\begin_inset Formula $[x^{*};\lambda^{*}]$
\end_inset

, 
\begin_inset Formula $N_{\sigma}$
\end_inset

 around 
\begin_inset Formula $\sigma=0$
\end_inset

, and some function continuous 
\begin_inset Formula $z:N_{\sigma}\rightarrow N_{x}$
\end_inset

 s.t.
 
\begin_inset Formula $h(z(t),t)=0$
\end_inset

 for all 
\begin_inset Formula $t\in N_{\mu}$
\end_inset

 (we can say that 
\begin_inset Formula $z(\sigma)=[z_{x}(\sigma);z_{\lambda}(\sigma)]$
\end_inset

).
 For these 
\begin_inset Formula $\sigma\in N_{\sigma}$
\end_inset

, we see that 
\begin_inset Formula $h(z(\sigma),\sigma)=\begin{bmatrix}\nabla f(z_{x}(\sigma))-A(z_{x}(\sigma))^{T}z_{\lambda}(\sigma)\\
-c(z_{x}(\sigma))-\sigma z_{\lambda}(\sigma)
\end{bmatrix}=0$
\end_inset

.
 Note that this implies that 
\begin_inset Formula $-c(z_{x}(\sigma))-\sigma z_{\lambda}(\sigma)=0$
\end_inset

, or equivalently, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $-\frac{1}{\sigma}c(z_{x}(\sigma))=z_{\lambda}(\sigma)$
\end_inset

.
 So for a given 
\begin_inset Formula $\sigma$
\end_inset

, the point 
\begin_inset Formula $z_{x}(\sigma),z_{\lambda}(\sigma)$
\end_inset

 satisfies 
\begin_inset Formula $\nabla P_{\sigma}=\nabla f(z_{x}(\sigma))+\frac{1}{\sigma}c(z_{x}(\sigma))^{T}A(z_{x}(\sigma))=\nabla f(z_{x}(\sigma))+(-z_{\lambda}(\sigma))^{T}A(z_{x}(\sigma))=0$
\end_inset

.
 
\end_layout

\begin_layout Standard
To show that this point in a local minimizer, we must show the next necessary
 condition that 
\begin_inset Formula $\nabla^{2}P_{\mu}(x)$
\end_inset

 is positive semidefinite at this point.
 Notice that (using 
\begin_inset Formula $x=z_{x}(\sigma),\lambda=z_{\lambda}(\sigma)=-\frac{1}{\sigma}c(x)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula $\nabla^{2}P_{\mu}(x)=\nabla^{2}f(x)+\frac{1}{\sigma}\sum_{i=1}^{m}\nabla c_{i}(x)^{T}\nabla c_{i}(x)+\frac{1}{\sigma}\sum_{i=1}^{m}c_{i}(x)\nabla^{2}c_{i}(x)=\nabla_{xx}^{2}L_{\sigma}(x,\lambda)+\frac{1}{\sigma}A(x)^{T}A(x)$
\end_inset

.
 
\end_layout

\begin_layout Standard
Let some 
\begin_inset Formula $y$
\end_inset

 be given and consider 
\begin_inset Formula $y^{T}\nabla^{2}P_{\mu}(x)y=y^{T}\nabla_{xx}^{2}L_{\sigma}(x,\lambda)y+\frac{1}{\sigma}y^{T}A(x)^{T}A(x)y$
\end_inset

.
 Notice that as 
\begin_inset Formula $\sigma\rightarrow0$
\end_inset

, 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x,\lambda)\rightarrow\nabla_{xx}^{2}L_{\sigma}(x^{*},\lambda^{*})$
\end_inset

 since 
\begin_inset Formula $x=z_{x}(\sigma)\rightarrow x^{*},\lambda=z_{\lambda}(\sigma)=-\frac{1}{\sigma}c(x)\rightarrow\lambda^{*}$
\end_inset

.
 We know that 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x^{*},\lambda^{*})$
\end_inset

 has strictly positive eigenvalues by the 2nd order conditions, so we can
 set 
\begin_inset Formula $\epsilon>0$
\end_inset

 as the smallest eigenvalue of 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x^{*},\lambda^{*})$
\end_inset

.
 Since convergent matricies are convergent in their eigenvalues, for sufficientl
y small 
\begin_inset Formula $\sigma$
\end_inset

, we can make 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x,\lambda)$
\end_inset

 s.t.
 the each eigenvalue of 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x,\lambda)$
\end_inset

 is within 
\begin_inset Formula $\frac{\epsilon}{2}$
\end_inset

 of some eigenvalue of 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x^{*},\lambda^{*})$
\end_inset

, and since 
\begin_inset Formula $\epsilon$
\end_inset

 is the smallest of all of those, this guarantees that 
\begin_inset Formula $\nabla_{xx}^{2}L_{\sigma}(x,\lambda)$
\end_inset

 is positive semidefinite.
 Next, consider 
\begin_inset Formula $\frac{1}{\sigma}y^{T}A(x)^{T}A(x)y$
\end_inset

.
 Note that 
\end_layout

\begin_layout Standard
We also see that 
\begin_inset Formula $h(z(0),0)=0$
\end_inset

, which is true only when 
\begin_inset Formula $z(0)=[x^{*};\lambda^{*}]$
\end_inset

, so by the continuity of z, as 
\begin_inset Formula $\sigma\rightarrow0$
\end_inset

, 
\begin_inset Formula $z_{x}(\sigma)\rightarrow x^{*},z_{\lambda}(\sigma)\rightarrow\lambda^{*}$
\end_inset

.
 Hence, we see that for sufficiently small 
\begin_inset Formula $\sigma>0$
\end_inset

, a minimizer for 
\begin_inset Formula $P_{\sigma}$
\end_inset

 will be within the neighborhood of 
\begin_inset Formula $x^{*}$
\end_inset

.
\end_layout

\begin_layout Section*
Problem 2
\end_layout

\begin_layout Standard
In our current iteration k with given 
\begin_inset Formula $x^{*},\lambda^{*}$
\end_inset

, the Lagrangian can be written as 
\begin_inset Formula $\nabla L_{xx}(x^{*},\lambda^{*})=\nabla f_{k}-A_{k}^{T}\lambda^{*}$
\end_inset

.
 If we substitute this into the original objective function (
\begin_inset Formula $f_{k}+\nabla f_{k}^{T}p+\frac{1}{2}p^{T}\nabla L_{xx}(x^{*},\lambda^{*})p)$
\end_inset

 for 
\begin_inset Formula $\nabla f_{k}^{T}p$
\end_inset

, we see that 
\begin_inset Formula $f_{k}+\nabla L_{xx}(x^{*},\lambda^{*})^{T}p+\frac{1}{2}p^{T}\nabla L_{xx}(x^{*},\lambda^{*})p=f_{k}+(\nabla f_{k}-A_{k}^{T}\lambda^{*})^{T}p+\frac{1}{2}p^{T}\nabla L_{xx}(x^{*},\lambda^{*})p=$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula $f_{k}+\nabla f_{k}^{T}p-(A_{k}^{T}\lambda^{*})^{T}p+\frac{1}{2}p^{T}\nabla L_{xx}(x^{*},\lambda^{*})p$
\end_inset


\end_layout

\begin_layout Standard
Notice that 
\begin_inset Formula $-(A_{k}^{T}\lambda^{*})^{T}p=-(\lambda^{*})^{T}(A_{k}^{T})^{T}p=-(\lambda^{*})^{T}A_{k}p$
\end_inset


\end_layout

\begin_layout Standard
But we know that 
\begin_inset Formula $A_{k}p+c_{k}=0$
\end_inset

 from the first constraint in the problem, so 
\begin_inset Formula $A_{k}p=-c_{k}$
\end_inset

 and thus 
\begin_inset Formula $-(\lambda^{*})^{T}A_{k}p=-(\lambda^{*})^{T}-c_{k}=(\lambda^{*})^{T}c_{k}$
\end_inset

.
 But this is merely a constant (say, 
\begin_inset Formula $r=(\lambda^{*})^{T}c_{k}$
\end_inset

) since 
\begin_inset Formula $\lambda^{*},c_{k}$
\end_inset

 are both given.
 So 
\begin_inset Formula $f_{k}+\nabla f_{k}^{T}p-(A_{k}^{T}\lambda^{*})^{T}p+\frac{1}{2}p^{T}\nabla^{2}L_{xx}(x^{*},\lambda^{*})p=f_{k}+\nabla f_{k}^{T}p+r+\frac{1}{2}p^{T}\nabla^{2}L_{xx}(x^{*},\lambda^{*})p$
\end_inset


\end_layout

\begin_layout Standard
But the problem of minimizing this objective is the same as minimizing this
 objective without the constant, so min 
\begin_inset Formula $f_{k}+\nabla f_{k}^{T}p+r+\frac{1}{2}p^{T}\nabla^{2}L_{xx}(x^{*},\lambda^{*})p$
\end_inset

 
\begin_inset Formula $\cong$
\end_inset

 min 
\begin_inset Formula $f_{k}+\nabla f_{k}^{T}p+\frac{1}{2}p^{T}\nabla^{2}L_{xx}(x^{*},\lambda^{*})p=f_{k}+\nabla L_{xx}(x^{*},\lambda^{*})^{T}p+\frac{1}{2}p^{T}\nabla^{2}L_{xx}(x^{*},\lambda^{*})p$
\end_inset

.
 Hence, we have shown that the original problem with 
\begin_inset Formula $\nabla f_{k}^{T}p$
\end_inset

 is equivalent to the problem with 
\begin_inset Formula $f_{k}+\nabla L_{xx}(x^{*},\lambda^{*})^{T}p$
\end_inset

.
\end_layout

\begin_layout Section*
Problem 3
\end_layout

\begin_layout Standard
First, we shall notice that algorithm 18.1 is structure based upon algorithm
 11.1.
 We consider 
\begin_inset Formula $x_{k}'=\begin{bmatrix}x_{k}\\
\lambda_{k}
\end{bmatrix}$
\end_inset

 as our variable with 
\begin_inset Formula $x_{0}'=\begin{bmatrix}x_{0}\\
\lambda_{0}
\end{bmatrix}$
\end_inset

.
 We note that given the formulation of 
\begin_inset Formula $l_{k}$
\end_inset

 and 
\begin_inset Formula $\lambda_{k}$
\end_inset

, we see that 
\begin_inset Formula $\lambda_{k+1}=\lambda_{k}+p_{\lambda}$
\end_inset

 from the formulation in 18.6.
 Then the body of the loop in algorithm 18.1 amounts to solving a linear
 system of the form:
\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{bmatrix}\nabla_{xx}^{2}L_{k} & -A_{k}^{T}\\
A_{k} & 0
\end{bmatrix}\begin{bmatrix}p_{k}\\
\lambda_{k+1}
\end{bmatrix}=\begin{bmatrix}-\nabla f_{k}\\
-c_{k}
\end{bmatrix}$
\end_inset


\end_layout

\begin_layout Standard
But this is equivalent to solving the following problem with the substitution
 for 
\begin_inset Formula $\lambda_{k+1}=\lambda_{k}+p_{\lambda}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{bmatrix}\nabla_{xx}^{2}L_{k} & -A_{k}^{T}\\
A_{k} & 0
\end{bmatrix}\begin{bmatrix}p_{k}\\
p_{\lambda}
\end{bmatrix}=J(x_{k}')\begin{bmatrix}p_{k}\\
p_{\lambda}
\end{bmatrix}=r(x_{k}')=\begin{bmatrix}-\nabla f_{k}+A_{k}^{T}\lambda_{k}\\
-c_{k}
\end{bmatrix}$
\end_inset


\end_layout

\begin_layout Standard
After solving this linear equation for a solution 
\begin_inset Formula $\begin{bmatrix}p_{k}\\
p_{\lambda}
\end{bmatrix}$
\end_inset

, we see that 
\begin_inset Formula $x_{k+1}\leftarrow x_{k}+p_{k}$
\end_inset

 and 
\begin_inset Formula $\lambda_{k+1}\leftarrow\lambda_{k}+p_{\lambda}$
\end_inset

 for the variable 
\begin_inset Formula $x_{k}'=\begin{bmatrix}x_{k+1}\\
\lambda_{k+1}
\end{bmatrix}$
\end_inset

, after which we repeat the process.
 This formulates the algorithm equivalently to Newton's algorithm in 11.1.
\end_layout

\begin_layout Standard
We next note that because assumption 18.2 holds, we know that the Jacobian
 
\begin_inset Formula $A(x)$
\end_inset

 has full row rank and that 
\begin_inset Formula $\nabla_{xx}^{2}L_{k}$
\end_inset

 is positive definite on the tangent space of constraints.
 This implies that the matrix 
\begin_inset Formula $J(x_{k}')$
\end_inset

 above is nonsingular.
 We also know that the solution 
\begin_inset Formula $x^{*}$
\end_inset

 to the original NLP has some unique Lagrange multipliers 
\begin_inset Formula $\lambda^{*}$
\end_inset

 (by LICQ) satisfying 
\begin_inset Formula $r(\begin{bmatrix}x^{*}\\
\lambda^{*}
\end{bmatrix})=0$
\end_inset

 since 
\begin_inset Formula $r(\begin{bmatrix}x^{*}\\
\lambda^{*}
\end{bmatrix})=\begin{bmatrix}-\nabla f_{k}(x^{*})+A_{k}^{T}\lambda\\
-c_{k}(x^{*})
\end{bmatrix}=\begin{bmatrix}0\\
0
\end{bmatrix}$
\end_inset

 by the KKT conditions and constraints.
 So if 
\begin_inset Formula $\{x_{k}'\}$
\end_inset

 are within some neighborhood of 
\begin_inset Formula $\begin{bmatrix}x^{*}\\
\lambda^{*}
\end{bmatrix}$
\end_inset

, our algorithm will converge to some solution in some Q-superlinear time
 by theorem 11.2.
 
\end_layout

\begin_layout Standard
Because 
\begin_inset Formula $f,c$
\end_inset

 are twice Lipchitz differentiable near 
\begin_inset Formula $x^{*}$
\end_inset

, then 
\begin_inset Formula $\nabla f,\nabla c_{i}$
\end_inset

 are Lipshitz continuously differentiable.
 So then 
\begin_inset Formula $A_{k}^{T}\lambda_{k}$
\end_inset

 is also Lipshitz continuously differentiable (product and sum of Lipshitz
 continuously differentiable functions).
 So overall 
\begin_inset Formula $r(x_{k}')=\begin{bmatrix}-\nabla f_{k}+A_{k}^{T}\lambda_{k}\\
-c_{k}
\end{bmatrix}$
\end_inset

 is also Lipshitz continuously differentiable (on x and 
\begin_inset Formula $\lambda$
\end_inset

) as the sums and differences of these terms.
 This implies by theorem 11.2 that our algorithm has quadratic convergence
 if 
\begin_inset Formula $\{x_{k}'\}$
\end_inset

 are within some neighborhood of 
\begin_inset Formula $\begin{bmatrix}x^{*}\\
\lambda^{*}
\end{bmatrix}$
\end_inset

.
\end_layout

\begin_layout Section*
Problem 4
\end_layout

\begin_layout Standard
Program code:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Homework 4
\end_layout

\begin_layout Plain Layout

% Problem 4
\end_layout

\begin_layout Plain Layout

answer = [-1.71, 1.59, 1.82, -0.763, -0.763]'
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%Variables
\end_layout

\begin_layout Plain Layout

x = sym('x',[5,1])
\end_layout

\begin_layout Plain Layout

l = sym('l',[3,1]) %num constraints
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%Initial choices
\end_layout

\begin_layout Plain Layout

x_initial = [-1.8, 1.7, 1.9, -0.8, -0.8]'
\end_layout

\begin_layout Plain Layout

l_initial = [1,-1,1]'
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

f = exp(x(1,1)*x(2,1)*x(3,1)*x(4,1)*x(5,1))-(0.5)*(x(1,1)^3+x(2,1)^3+1)^2
\end_layout

\begin_layout Plain Layout

c1 = x(1,1)^2+x(2,1)^2+x(3,1)^2+x(4,1)^2+x(5,1)^2-10
\end_layout

\begin_layout Plain Layout

c2 = x(2,1)*x(3,1)-5*x(4,1)*x(5,1)
\end_layout

\begin_layout Plain Layout

c3 = x(1,1)^3+x(2,1)^3+1
\end_layout

\begin_layout Plain Layout

c = [c1;c2;c3]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%Algo 18.1
\end_layout

\begin_layout Plain Layout

%Find symbolic components
\end_layout

\begin_layout Plain Layout

grad_f = gradient(f)
\end_layout

\begin_layout Plain Layout

A = jacobian(c,x)
\end_layout

\begin_layout Plain Layout

F = [gradient(f,x)-A'*l; c];
\end_layout

\begin_layout Plain Layout

Fj = jacobian(F,[x;l])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%Setup
\end_layout

\begin_layout Plain Layout

xk = x_initial;
\end_layout

\begin_layout Plain Layout

lk = l_initial;
\end_layout

\begin_layout Plain Layout

old_sol= [1;2;3;4;5;6;7;8]
\end_layout

\begin_layout Plain Layout

sol = [8;7;6;5;4;3;2;1]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%No convergence test specified, chose a simple norm heuristic
\end_layout

\begin_layout Plain Layout

while norm(sol-old_sol) > 1*10^-8
\end_layout

\begin_layout Plain Layout

  old_sol = sol  
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  Fk = double(subs(Fj,[x;l],[xk;lk]));
\end_layout

\begin_layout Plain Layout

  grad_fk = double(subs(grad_f,x,xk));
\end_layout

\begin_layout Plain Layout

  ck = double(subs(c,x,xk));
\end_layout

\begin_layout Plain Layout

  sol = inv(Fk)*-[grad_fk; ck] %SOlve linear eqn
\end_layout

\begin_layout Plain Layout

  xk = xk + sol(1:5,1);
\end_layout

\begin_layout Plain Layout

  lk = sol(6:8,1);
\end_layout

\begin_layout Plain Layout

  i=i+1;
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Solution
\end_layout

\begin_layout Plain Layout

xk
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Problem 5
\end_layout

\begin_layout Standard
Consider 
\begin_inset Formula $c(x)=x_{1}^{2}+x_{2}^{2}-1$
\end_inset

.
 For the given constraint we see that the Jacobian is:
\end_layout

\begin_layout Standard
\begin_inset Formula $A_{k}=A(x_{k})=[\nabla c(x)]^{T}=\begin{bmatrix}2x_{1} & 2x_{2}\end{bmatrix}$
\end_inset

 , 
\begin_inset Formula $c_{k}=c(x_{k})=x_{1}^{2}+x_{2}^{2}-1$
\end_inset


\end_layout

\begin_layout Standard
So we can evaluate this at the following points:
\end_layout

\begin_layout Standard
\begin_inset Formula $(0,0)^{T}$
\end_inset

: 
\begin_inset Formula $A_{k}=\begin{bmatrix}0 & 0\end{bmatrix},c_{k}=0+0-1=-1\rightarrow$
\end_inset


\begin_inset Formula $A_{k}p+c_{k}=\begin{bmatrix}0 & 0\end{bmatrix}p-1=-1=0$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $(0,1)^{T}$
\end_inset

: 
\begin_inset Formula $A_{k}=\begin{bmatrix}0 & 2\end{bmatrix},c_{k}=0+2^{2}-1=3\rightarrow$
\end_inset


\begin_inset Formula $A_{k}p+c_{k}=\begin{bmatrix}0 & 2\end{bmatrix}p+3=2p_{2}+3=0$
\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $(0.1,0.02)^{T}$
\end_inset

: 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $A_{k}=\begin{bmatrix}0.2 & 0.04\end{bmatrix},c_{k}=0.1^{2}+0.02^{2}-1=0.0104-1=-0.9896\rightarrow$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $A_{k}p+c_{k}=\begin{bmatrix}0.2 & 0.04\end{bmatrix}p-0.9896=0.2p_{1}+0.04p_{2}-0.9896=0$
\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $(-0.1,0.02)^{T}$
\end_inset

: 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $A_{k}=\begin{bmatrix}-0.2 & -0.04\end{bmatrix},c_{k}=(-0.1)^{2}+(-0.02)^{2}-1=0.0104-1=-0.9896\rightarrow$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $A_{k}p+c_{k}=\begin{bmatrix}-0.2 & -0.04\end{bmatrix}p-0.9896=0.2p_{1}-0.04p_{2}-0.9896=0$
\end_inset


\end_layout

\end_body
\end_document
